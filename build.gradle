plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.google.cloud.tools.jib' version '3.4.0'
}

group = 'com.slb'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'software.amazon.awssdk:bom:2.27.24'
    implementation 'software.amazon.awssdk:s3:2.27.24'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // db
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.mysql:mysql-connector-j'

    // webflux
    implementation 'org.springframework.boot:spring-boot-starter-webflux'


}

tasks.named('test') {
    useJUnitPlatform()
}

jib {
    from {
        image = 'openjdk:17-slim'
    }
    to {
        image = project.findProperty("DOCKER_ID") + "/" + project.findProperty("DOCKER_IMAGE_NAME")
        tags = ['latest']
        auth {
            username = project.findProperty("DOCKER_ID")
            password = project.findProperty("DOCKER_PASSWORD")
        }
    }
    container {
        jvmFlags = ['-Xms512m', '-Xmx512m', '-Dspring.profiles.active=prod']
    }
}